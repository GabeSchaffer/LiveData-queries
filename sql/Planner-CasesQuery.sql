
SELECT
	*
FROM (
	SELECT XMLElement("PlannerCase",
		XMLAttributes(CLEANUP_DURATION AS "turnoverTime",
			(SELECT OE_FIELD_DISPLAY_VALUE FROM SCH_EVENT_DETAIL WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID AND OE_FIELD_ID = 4162828 AND VERSION_DT_TM = NULL_DT_TM) AS "edc",
			(SELECT OE_FIELD_DISPLAY_VALUE FROM SCH_EVENT_DETAIL WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID AND OE_FIELD_ID = 4162825 AND VERSION_DT_TM = NULL_DT_TM) AS "gravida",
			(SELECT OE_FIELD_DISPLAY_VALUE FROM SCH_EVENT_DETAIL WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID AND OE_FIELD_ID = 4162826 AND VERSION_DT_TM = NULL_DT_TM) AS "para",
			(SELECT APPT_TYPE_CD FROM SCH_EVENT WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID) AS "apptTypeId",
			NULLIF((COALESCE(        (SELECT TO_CHAR(LONG_TEXT) FROM LONG_TEXT WHERE LONG_TEXT_ID = (SELECT TEXT_ID FROM SCH_EVENT_COMM WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID AND SUB_TEXT_MEANING = 'SURGPUBLIC' AND VERSION_DT_TM = NULL_DT_TM)),        (SELECT OE_FIELD_DISPLAY_VALUE FROM SCH_EVENT_DETAIL WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID AND OE_FIELD_ID = 663791 AND VERSION_DT_TM = NULL_DT_TM))), ' ') AS "publicComment",
			COALESCE((SELECT OE_FIELD_DISPLAY_VALUE FROM SCH_EVENT_DETAIL WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID AND OE_FIELD_MEANING = 'REASONFOREXAM' AND VERSION_DT_TM = NULL_DT_TM), (SELECT OE_FIELD_DISPLAY_VALUE FROM SCH_EVENT_DETAIL WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID AND OE_FIELD_MEANING = 'SURGDIAGNOSIS' AND VERSION_DT_TM = NULL_DT_TM)) AS "reasonForExam",
			(SELECT OE_FIELD_DISPLAY_VALUE FROM SCH_EVENT_DETAIL WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID AND OE_FIELD_ID = 4162829 AND VERSION_DT_TM = NULL_DT_TM) AS "gbsStatus",
			(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = DECODE(SERVICE_RESOURCE_CD, 0, RESOURCE_CD, SERVICE_RESOURCE_CD)) AS "roomName",
			to_char(BEG_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "scheduledStartTime",
			(SELECT SCH_MEANING FROM SCH_EVENT WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID) AS "eventState",
			DURATION AS "duration",
			SCH_EVENT_ID AS "schEventId",
			DECODE(SERVICE_RESOURCE_CD, 0, RESOURCE_CD, SERVICE_RESOURCE_CD) AS "roomId",
			SCH_APPT_ID AS "id"),
		
		(SELECT XMLAgg(XMLElement("SurgicalCase",
			XMLAttributes((SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = SCHED_PAT_TYPE_CD) AS "patientType",
				SCHED_PAT_TYPE_CD AS "patientTypeId",
				to_char(SCHED_START_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "scheduledStartTime",
				(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = CANCEL_REASON_CD) AS "cancelReason",
				SCHED_DUR AS "duration",
				DECODE(SURG_OP_LOC_CD, 0, SCHED_OP_LOC_CD, SURG_OP_LOC_CD) AS "roomId",
				SURG_CASE_ID AS "id",
				SCHED_CLEANUP_DUR AS "turnoverTime",
				(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = SCHED_TYPE_CD) AS "caseType",
				(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = WOUND_CLASS_CD) AS "woundClass",
				(SELECT REPLACE(PRSNL_GROUP_NAME, UNISTR('\0000'), '') FROM PRSNL_GROUP WHERE PRSNL_GROUP_ID = DECODE(SURG_SPECIALTY_ID, 0, SCHED_SURG_SPECIALTY_ID, SURG_SPECIALTY_ID)) AS "service",
				to_char(CHECKIN_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "registrationTime",
				(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = ASA_CLASS_CD) AS "asaScore",
				ADD_ON_IND AS "isAddOn",
				to_char(SURG_START_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "firstIncisionTime",
				(SELECT DECODE(pd.REC_VER_ID, 0, 0, 1) FROM PERIOPERATIVE_DOCUMENT pd WHERE pd.SURG_CASE_ID = PLANNER_SURGICAL_CASE.SURG_CASE_ID AND pd.DOC_TYPE_CD IN (45065182, 45065477, 49258577)) AS "isFinalized",
				NULLIF(CANCEL_REASON_CD, 0) AS "cancelReasonId",
				to_char(CANCEL_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "cancelTime",
				SCHED_TYPE_CD AS "caseTypeId",
				(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = SCHED_SURG_AREA_CD) AS "surgeryArea",
				NULLIF(DECODE(SURG_SPECIALTY_ID, 0, SCHED_SURG_SPECIALTY_ID, SURG_SPECIALTY_ID), 0) AS "serviceId",
				SURG_CASE_NBR_FORMATTED AS "displayId",
				SCH_EVENT_ID AS "schEventId",
				NULLIF(ASA_CLASS_CD, 0) AS "asaScoreId",
				to_char(CREATE_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "createTime",
				(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = ANESTH_TYPE_CD) AS "anesthesiaType",
				NULLIF(WOUND_CLASS_CD, 0) AS "woundClassId",
				(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = DECODE(SURG_OP_LOC_CD, 0, SCHED_OP_LOC_CD, SURG_OP_LOC_CD)) AS "roomName",
				to_char(SURG_STOP_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "lastProcedureCloseTime"),
			
			(SELECT XMLAgg(XMLElement("PlannerSurgeon",
				XMLAttributes(USERNAME AS "username",
					/* ALIASPOOL NPI */ (SELECT MAX(ALIAS) FROM (SELECT PRSNL_ALIAS_ID, ALIAS, PERSON_ID as ALIAS_PERSON_ID, ACTIVE_IND, ALIAS_POOL_CD FROM PRSNL_ALIAS) a WHERE ALIAS_PERSON_ID = PERSON_ID AND ALIAS_POOL_CD = 28284809 AND ACTIVE_IND = 1) AS "npi",
					NAME_FIRST AS "firstName",
					PERSON_ID AS "personId",
					NAME_LAST AS "lastName",
					PHYSICIAN_IND AS "isProvider",
					REPLACE(NAME_FULL_FORMATTED, UNISTR('\0000'), '') AS "fullName",
					ACTIVE_IND AS "isActive")))
			FROM (PRSNL) PRSNL
			WHERE PERSON_ID != 0 AND PRSNL.PERSON_ID = PLANNER_SURGICAL_CASE.SURGEON_PRSNL_ID),
			
			(SELECT XMLAgg(XMLElement("Anesthetist",
				XMLAttributes(USERNAME AS "username",
					/* ALIASPOOL NPI */ (SELECT MAX(ALIAS) FROM (SELECT PRSNL_ALIAS_ID, ALIAS, PERSON_ID as ALIAS_PERSON_ID, ACTIVE_IND, ALIAS_POOL_CD FROM PRSNL_ALIAS) a WHERE ALIAS_PERSON_ID = PERSON_ID AND ALIAS_POOL_CD = 28284809 AND ACTIVE_IND = 1) AS "npi",
					NAME_FIRST AS "firstName",
					PERSON_ID AS "personId",
					NAME_LAST AS "lastName",
					PHYSICIAN_IND AS "isProvider",
					REPLACE(NAME_FULL_FORMATTED, UNISTR('\0000'), '') AS "fullName",
					ACTIVE_IND AS "isActive")))
			FROM (PRSNL) PRSNL
			WHERE PERSON_ID != 0 AND PRSNL.PERSON_ID = PLANNER_SURGICAL_CASE.SCHED_ANESTH_PRSNL_ID),
			
			(SELECT XMLAgg(XMLElement("PlannerProcedure",
				XMLAttributes(to_char(PROC_END_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "endTime",
					NULLIF(DECODE(ANESTH_TYPE_CD, 0, SCHED_ANESTH_TYPE_CD, ANESTH_TYPE_CD), 0) AS "anesTypeId",
					PROC_TEXT AS "name",
					(SELECT REPLACE(PRSNL_GROUP_NAME, UNISTR('\0000'), '') FROM PRSNL_GROUP WHERE PRSNL_GROUP_ID = DECODE(SURG_SPECIALTY_ID, 0, SCHED_SURG_SPECIALTY_ID, SURG_SPECIALTY_ID)) AS "service",
					NULLIF(DECODE(MODIFIER, ' ', SCHED_MODIFIER, MODIFIER), ' ') AS "laterality",
					SCHED_SEQ_NUM AS "sortKey",
					(SELECT PRIMARY_MNEMONIC FROM ORDER_CATALOG WHERE CATALOG_CD = DECODE(SURG_PROC_CD, 0, SCHED_SURG_PROC_CD, SURG_PROC_CD)) AS "dbName",
					NULLIF(DECODE(SURG_SPECIALTY_ID, 0, SCHED_SURG_SPECIALTY_ID, SURG_SPECIALTY_ID), 0) AS "serviceId",
					to_char(PROC_START_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "startTime",
					DECODE(SURG_PROC_CD, 0, SCHED_PRIMARY_IND, DECODE(PRIMARY_PROC_IND, 32 /* 32 = unspecified */, 0, PRIMARY_PROC_IND)) AS "isPrimary",
					SURG_CASE_PROC_ID AS "id",
					ACTIVE_IND AS "isActive",
					(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = DECODE(ANESTH_TYPE_CD, 0, SCHED_ANESTH_TYPE_CD, ANESTH_TYPE_CD)) AS "anesType"),
				
				(SELECT XMLAgg(XMLElement("PrimarySurgeonSched",
					XMLAttributes(USERNAME AS "username",
						/* ALIASPOOL NPI */ (SELECT MAX(ALIAS) FROM (SELECT PRSNL_ALIAS_ID, ALIAS, PERSON_ID as ALIAS_PERSON_ID, ACTIVE_IND, ALIAS_POOL_CD FROM PRSNL_ALIAS) a WHERE ALIAS_PERSON_ID = PERSON_ID AND ALIAS_POOL_CD = 28284809 AND ACTIVE_IND = 1) AS "npi",
						NAME_FIRST AS "firstName",
						PERSON_ID AS "personId",
						NAME_LAST AS "lastName",
						PHYSICIAN_IND AS "isProvider",
						REPLACE(NAME_FULL_FORMATTED, UNISTR('\0000'), '') AS "fullName",
						ACTIVE_IND AS "isActive")))
				FROM (PRSNL) PRSNL
				WHERE PERSON_ID != 0 AND PRSNL.PERSON_ID = PLANNER_PROCEDURE.SCHED_PRIMARY_SURGEON_ID),
				
				(SELECT XMLAgg(XMLElement("PrimarySurgeon",
					XMLAttributes(USERNAME AS "username",
						/* ALIASPOOL NPI */ (SELECT MAX(ALIAS) FROM (SELECT PRSNL_ALIAS_ID, ALIAS, PERSON_ID as ALIAS_PERSON_ID, ACTIVE_IND, ALIAS_POOL_CD FROM PRSNL_ALIAS) a WHERE ALIAS_PERSON_ID = PERSON_ID AND ALIAS_POOL_CD = 28284809 AND ACTIVE_IND = 1) AS "npi",
						NAME_FIRST AS "firstName",
						PERSON_ID AS "personId",
						NAME_LAST AS "lastName",
						PHYSICIAN_IND AS "isProvider",
						REPLACE(NAME_FULL_FORMATTED, UNISTR('\0000'), '') AS "fullName",
						ACTIVE_IND AS "isActive")))
				FROM (PRSNL) PRSNL
				WHERE PERSON_ID != 0 AND PRSNL.PERSON_ID = PLANNER_PROCEDURE.PRIMARY_SURGEON_ID)))
			FROM (SURG_CASE_PROCEDURE) PLANNER_PROCEDURE
			WHERE PLANNER_PROCEDURE.SURG_CASE_ID = PLANNER_SURGICAL_CASE.SURG_CASE_ID),
			
			(SELECT XMLAgg(XMLElement("Event",
				XMLAttributes(to_char(CASE_TIME_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "timestamp",
					(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = TASK_ASSAY_CD) AS "event")))
			FROM (CASE_TIMES) CASE_TIMES
			WHERE ACTIVE_IND = 1 AND CASE_TIMES.SURG_CASE_ID = PLANNER_SURGICAL_CASE.SURG_CASE_ID))
		ORDER BY SCHED_START_DT_TM)
		FROM (SURGICAL_CASE) PLANNER_SURGICAL_CASE
		WHERE PLANNER_SURGICAL_CASE.SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID),
		
		(SELECT XMLAgg(XMLElement("AssistantSurgeonDetail",
			XMLAttributes(CANDIDATE_ID AS "id"),
			
			(SELECT XMLAgg(XMLElement("AssistantSurgeon",
				XMLAttributes(USERNAME AS "username",
					/* ALIASPOOL NPI */ (SELECT MAX(ALIAS) FROM (SELECT PRSNL_ALIAS_ID, ALIAS, PERSON_ID as ALIAS_PERSON_ID, ACTIVE_IND, ALIAS_POOL_CD FROM PRSNL_ALIAS) a WHERE ALIAS_PERSON_ID = PERSON_ID AND ALIAS_POOL_CD = 28284809 AND ACTIVE_IND = 1) AS "npi",
					NAME_FIRST AS "firstName",
					PERSON_ID AS "personId",
					NAME_LAST AS "lastName",
					PHYSICIAN_IND AS "isProvider",
					REPLACE(NAME_FULL_FORMATTED, UNISTR('\0000'), '') AS "fullName",
					ACTIVE_IND AS "isActive")))
			FROM (PRSNL) PRSNL
			WHERE PERSON_ID != 0 AND PRSNL.PERSON_ID = ASSIST_SURG.OE_FIELD_VALUE)))
		FROM (SCH_EVENT_DETAIL) ASSIST_SURG
		WHERE OE_FIELD_MEANING = 'SURGEON2' AND VERSION_DT_TM = NULL_DT_TM AND ASSIST_SURG.SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID),
		
		(SELECT XMLAgg(XMLElement("ReferringPhysicianDetail",
			XMLAttributes(CANDIDATE_ID AS "id"),
			
			(SELECT XMLAgg(XMLElement("ReferringPhysician",
				XMLAttributes(USERNAME AS "username",
					/* ALIASPOOL NPI */ (SELECT MAX(ALIAS) FROM (SELECT PRSNL_ALIAS_ID, ALIAS, PERSON_ID as ALIAS_PERSON_ID, ACTIVE_IND, ALIAS_POOL_CD FROM PRSNL_ALIAS) a WHERE ALIAS_PERSON_ID = PERSON_ID AND ALIAS_POOL_CD = 28284809 AND ACTIVE_IND = 1) AS "npi",
					NAME_FIRST AS "firstName",
					PERSON_ID AS "personId",
					NAME_LAST AS "lastName",
					PHYSICIAN_IND AS "isProvider",
					REPLACE(NAME_FULL_FORMATTED, UNISTR('\0000'), '') AS "fullName",
					ACTIVE_IND AS "isActive")))
			FROM (PRSNL) PRSNL
			WHERE PERSON_ID != 0 AND PRSNL.PERSON_ID = REFER_PHYS.OE_FIELD_VALUE)))
		FROM (SCH_EVENT_DETAIL) REFER_PHYS
		WHERE OE_FIELD_MEANING = 'REFERPHYS' AND VERSION_DT_TM = NULL_DT_TM AND REFER_PHYS.SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID),
		
		(SELECT XMLAgg(XMLElement("Encounter",
			XMLAttributes(ENCNTR_ID AS "encntrId"),
			
			(SELECT XMLAgg(XMLElement("PlannerPatient",
				XMLAttributes(DECEASED_DT_TM AS "dateOfDeath",
					NAME_FIRST AS "firstName",
					NAME_MIDDLE AS "middleName",
					PERSON_ID AS "personId",
					NAME_LAST AS "lastName",
					(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = SEX_CD) AS "sex",
					BIRTH_DT_TM AS "dob",
					NAME_FULL_FORMATTED AS "fullName"),
				
				(SELECT XMLAgg(XMLElement("Address",
					XMLAttributes(STREET_ADDR2 AS "streetAddr2",
						STREET_ADDR AS "streetAddr",
						(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = ADDRESS_TYPE_CD) AS "addressType",
						NULLIF(COUNTRY_CD, 0) AS "countryId",
						ADDRESS_ID AS "addressId",
						CITY AS "city",
						NULLIF(STATE_CD, 0) AS "stateId",
						ZIPCODE AS "zipCode",
						ADDRESS_TYPE_SEQ AS "addressTypeSeq",
						ADDRESS_TYPE_CD AS "addressTypeId",
						ACTIVE_IND AS "isActive"))
				ORDER BY ADDRESS_ID DESC)
				FROM (ADDRESS) ADDRESS
				WHERE PARENT_ENTITY_NAME = 'PERSON' AND ADDRESS.PARENT_ENTITY_ID = PERSON.PERSON_ID),
				
				(SELECT XMLAgg(XMLElement("Phone",
					XMLAttributes(PHONE_NUM AS "phoneNum",
						PHONE_TYPE_SEQ AS "phoneTypeSeq",
						(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = PHONE_TYPE_CD) AS "phoneType",
						PHONE_TYPE_CD AS "phoneTypeId",
						PHONE_ID AS "phoneId",
						ACTIVE_IND AS "isActive"))
				ORDER BY PHONE_ID DESC)
				FROM (PHONE) PHONE
				WHERE PARENT_ENTITY_NAME = 'PERSON' AND PHONE.PARENT_ENTITY_ID = PERSON.PERSON_ID)))
			FROM (PERSON) PERSON
			WHERE PERSON.PERSON_ID = ENCOUNTER.PERSON_ID),
			
			(SELECT XMLAgg(XMLElement("Person",
				XMLAttributes((SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = PERSON_ALIAS_TYPE_CD) AS "type",
					(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = ALIAS_POOL_CD) AS "id",
					ALIAS AS "name")))
			FROM (PERSON_ALIAS) PERSON_ALIAS
			WHERE PERSON_ALIAS.PERSON_ID = ENCOUNTER.PERSON_ID),
			
			(SELECT XMLAgg(XMLElement("Alias",
				XMLAttributes((SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = ALIAS_POOL_CD) AS "id",
					ALIAS AS "name")))
			FROM (ENCNTR_ALIAS) ENCNTR_ALIAS
			WHERE ACTIVE_IND = 1 AND ENCNTR_ALIAS.ENCNTR_ID = ENCOUNTER.ENCNTR_ID),
			
			(SELECT XMLAgg(XMLElement("Insurance",
				XMLAttributes(ENCNTR_PLAN_RELTN_ID AS "encntrPlanReltnId",
					SUBS_MEMBER_NBR AS "subMemberNum",
					              (SELECT RELATED_PERSON_RELTN_CD /* find the most recently created active relationship for the insured to the patient */              FROM               (SELECT *               FROM PERSON_PERSON_RELTN ppr               WHERE ppr.ACTIVE_IND = 1 AND RELATED_PERSON_ID = ENCNTR_PLAN_RELTN.PERSON_ID AND RELATED_PERSON_RELTN_CD != 0               ORDER BY PERSON_PERSON_RELTN_ID DESC)              WHERE ROWNUM = 1) AS "insuredRelationshipId",
					PRIORITY_SEQ AS "sortKey",
					(SELECT NAME_LAST FROM PERSON WHERE PERSON_ID = ENCNTR_PLAN_RELTN.PERSON_ID) AS "insuredNameLast",
					GROUP_NBR AS "groupNum",
					MEMBER_NBR AS "memberNum",
					ACTIVE_IND AS "isActive",
					(SELECT NAME_FIRST FROM PERSON WHERE PERSON_ID = ENCNTR_PLAN_RELTN.PERSON_ID) AS "insuredNameFirst"),
				
				(SELECT XMLAgg(XMLElement("HealthPlan",
					XMLAttributes(PLAN_NAME AS "planName",
						HEALTH_PLAN_ID AS "healthPlanId")))
				FROM (HEALTH_PLAN) HEALTH_PLAN
				WHERE HEALTH_PLAN.HEALTH_PLAN_ID = ENCNTR_PLAN_RELTN.HEALTH_PLAN_ID))
			ORDER BY ENCNTR_PLAN_RELTN_ID DESC)
			FROM (ENCNTR_PLAN_RELTN) ENCNTR_PLAN_RELTN
			WHERE ENCNTR_PLAN_RELTN.ENCNTR_ID = ENCOUNTER.ENCNTR_ID),
			
			(SELECT XMLAgg(XMLElement("EmergencyContact",
				XMLAttributes(ENCNTR_PERSON_RELTN_ID AS "encntr_person_reltn_id",
					(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = PERSON_RELTN_CD) AS "person_reltn_cd"),
				
				(SELECT XMLAgg(XMLElement("ContactPerson",
					XMLAttributes(DECEASED_DT_TM AS "dateOfDeath",
						NAME_FIRST AS "firstName",
						NAME_MIDDLE AS "middleName",
						PERSON_ID AS "personId",
						NAME_LAST AS "lastName",
						(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = SEX_CD) AS "sex",
						BIRTH_DT_TM AS "dob",
						NAME_FULL_FORMATTED AS "fullName"),
					
					(SELECT XMLAgg(XMLElement("Address",
						XMLAttributes(STREET_ADDR2 AS "streetAddr2",
							STREET_ADDR AS "streetAddr",
							(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = ADDRESS_TYPE_CD) AS "addressType",
							NULLIF(COUNTRY_CD, 0) AS "countryId",
							ADDRESS_ID AS "addressId",
							CITY AS "city",
							NULLIF(STATE_CD, 0) AS "stateId",
							ZIPCODE AS "zipCode",
							ADDRESS_TYPE_SEQ AS "addressTypeSeq",
							ADDRESS_TYPE_CD AS "addressTypeId",
							ACTIVE_IND AS "isActive"))
					ORDER BY ADDRESS_ID DESC)
					FROM (ADDRESS) ADDRESS
					WHERE PARENT_ENTITY_NAME = 'PERSON' AND ADDRESS.PARENT_ENTITY_ID = PERSON.PERSON_ID),
					
					(SELECT XMLAgg(XMLElement("Phone",
						XMLAttributes(PHONE_NUM AS "phoneNum",
							PHONE_TYPE_SEQ AS "phoneTypeSeq",
							(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = PHONE_TYPE_CD) AS "phoneType",
							PHONE_TYPE_CD AS "phoneTypeId",
							PHONE_ID AS "phoneId",
							ACTIVE_IND AS "isActive"))
					ORDER BY PHONE_ID DESC)
					FROM (PHONE) PHONE
					WHERE PARENT_ENTITY_NAME = 'PERSON' AND PHONE.PARENT_ENTITY_ID = PERSON.PERSON_ID)))
				FROM (PERSON) PERSON
				WHERE PERSON.PERSON_ID = ENCNTR_PERSON_RELTN.RELATED_PERSON_ID))
			ORDER BY ENCNTR_PERSON_RELTN_ID DESC)
			FROM (ENCNTR_PERSON_RELTN) ENCNTR_PERSON_RELTN
			WHERE ACTIVE_IND = 1 AND PERSON_RELTN_TYPE_CD = 1152 AND ENCNTR_PERSON_RELTN.ENCNTR_ID = ENCOUNTER.ENCNTR_ID),
			
			(SELECT XMLAgg(XMLElement("EncounterInfo",
				XMLAttributes((SELECT TO_CHAR(LONG_TEXT) FROM LONG_TEXT WHERE LONG_TEXT_ID = ENCNTR_INFO.LONG_TEXT_ID) AS "text",
					(SELECT DISPLAY FROM CODE_VALUE WHERE CODE_VALUE = INFO_SUB_TYPE_CD) AS "desc",
					INFO_SUB_TYPE_CD AS "type",
					ENCNTR_INFO_ID AS "encntrInfoId"))
			ORDER BY ENCNTR_INFO_ID DESC)
			FROM (ENCNTR_INFO) ENCNTR_INFO
			WHERE ACTIVE_IND = 1 AND INFO_TYPE_CD = 1170 AND ENCNTR_INFO.ENCNTR_ID = ENCOUNTER.ENCNTR_ID)))
		FROM (ENCOUNTER) ENCOUNTER
		WHERE ENCOUNTER.ENCNTR_ID = APPT_CASE.REAL_ENCNTR_ID),
		
		(SELECT XMLAgg(XMLElement("CaseStateChanges",
			XMLAttributes(to_char((SELECT BEG_DT_TM FROM SCH_APPT WHERE SCH_EVENT_ID = SCH_EVENT_ACTION.SCH_EVENT_ID AND SCHEDULE_ID = SCH_EVENT_ACTION.SCHEDULE_ID AND SERVICE_RESOURCE_CD != 0 AND VERSION_DT_TM = NULL_DT_TM), 'yyyy-mm-dd"T"HH24:Mi:ss') AS "schedStart",
				to_char(ACTION_DT_TM, 'yyyy-mm-dd"T"HH24:Mi:ss') AS "actionTime",
				SCH_ACTION_CD AS "sch_action_cd",
				(SELECT REPLACE(NAME_FULL_FORMATTED, UNISTR('\0000'), '') FROM PRSNL WHERE PERSON_ID = ACTION_PRSNL_ID) AS "actionPrsnl",
				NULLIF(SCH_REASON_CD, 0) AS "reasonId",
				SCH_ACTION_ID AS "schActionId",
				REPLACE(REASON_MEANING, UNISTR('\0000'), '') AS "reason_meaning",
				REPLACE(ACTION_MEANING, UNISTR('\0000'), '') AS "action"))
		ORDER BY SCH_ACTION_ID)
		FROM (SCH_EVENT_ACTION) SCH_EVENT_ACTION
		WHERE ACTION_MEANING IN ('CANCEL', 'RESCHEDULE', 'SCHEDULE', 'SHUFFLE', 'SWAPRES') AND SCH_EVENT_ACTION.SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID)).GetClobVal()
	FROM (select sa.*, (SELECT ENCNTR_ID FROM SCH_APPT WHERE SCHEDULE_ID = sa.SCHEDULE_ID AND ENCNTR_ID != 0) REAL_ENCNTR_ID from sch_appt sa) APPT_CASE
	WHERE ACTIVE_IND = 1 AND BEG_DT_TM BETWEEN DATE '2023-10-25' AND DATE '2023-10-28' AND SCH_EVENT_ID != 0 AND REAL_ENCNTR_ID IS NOT NULL AND SCHEDULE_SEQ = (SELECT MAX(SCHEDULE_SEQ) FROM SCH_APPT WHERE SCH_EVENT_ID = APPT_CASE.SCH_EVENT_ID) AND RESOURCE_CD IN (SELECT RESOURCE_CD FROM SCH_BOOK_LIST WHERE APPT_BOOK_ID IN (1332539, 1332543, 1378549))
	ORDER BY BEG_DT_TM)